name: "ESP8266 RTOS SDK Build"
author: Jackestar
description: "Composite action to build ESP8266 RTOS SDK firmware on Ubuntu runners. Installs dependencies, clones the SDK, runs the SDK installer and builds using make."

inputs:
  sdk-ref:
    description: "git ref (branch/tag/commit) to checkout for ESP8266_RTOS_SDK"
    required: false
    default: "master"
  install-deps:
    description: "Install system dependencies (apt). Set to 'false' if the runner is already provisioned."
    required: false
    default: "true"
  make-target:
    description: "Optional make target to build (e.g. flash, clean). Empty runs default 'make'."
    required: false
    default: "main"

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Restore SDK, pip and ccache caches
      uses: actions/cache@v4
      with:
        path: |
          $HOME/esp8266-rtos-sdk
          ~/.cache/pip
          ~/.ccache
          ~/
        # include sdk-ref so a change in SDK ref invalidates the SDK cache
        key: esp8266-${{ runner.os }}-sdk-${{ inputs.sdk-ref }}
        restore-keys: |
          esp8266-${{ runner.os }}-sdk-


    - name: Install dependencies
      if: ${{ inputs.install-deps == 'true' }}
        if ! . "$IDF_PATH/export.sh"; then
          echo "Error: Failed to source ESP8266 RTOS SDK export script"
          exit 1
        fi
      run: |
        sudo apt-get update
        sudo apt-get install -y git wget flex bison gperf python3 python3-pip cmake ninja-build ccache libffi-dev libssl-dev dfu-util unzip xz-utils

    - name: "ESP8266 RTOS SDK Build"
      author: Jackestar
      description: "Composite action to build ESP8266 RTOS SDK firmware on Ubuntu runners. Installs dependencies, clones the SDK, runs the SDK installer and builds using make."

      inputs:
      sdk-ref:
        description: "git ref (branch/tag/commit) to checkout for ESP8266_RTOS_SDK"
        required: false
        default: "master"
      install-deps:
        description: "Install system dependencies (apt). Set to 'false' if the runner is already provisioned."
        required: false
        default: "true"
      make-target:
        description: "Optional make target to build (e.g. flash, clean). Empty runs default 'make'."
        required: false
        default: ""

      runs:
      using: "composite"
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Restore SDK, pip and ccache caches
          uses: actions/cache@v4
          with:
            path: |
              $HOME/esp8266-rtos-sdk
              ~/.cache/pip
              ~/.ccache
            # include sdk-ref so a change in SDK ref invalidates the SDK cache
            key: esp8266-${{ runner.os }}-sdk-${{ inputs.sdk-ref }}
            restore-keys: |
              esp8266-${{ runner.os }}-sdk-

        - name: Install dependencies
          if: ${{ inputs.install-deps == 'true' }}
          shell: bash
          run: |
            sudo apt-get update
            sudo apt-get install -y git wget flex bison gperf python3 python3-pip cmake ninja-build ccache libffi-dev libssl-dev dfu-util unzip xz-utils

        - name: Install ESP8266 RTOS SDK
          shell: bash
          run: |
            set -euxo pipefail

            # Clone or use cached SDK. Ensure git metadata/tags exist so idf_tools can run `git describe --tags`.
            if [ -d "$HOME/esp8266-rtos-sdk" ]; then
              echo "ESP8266 RTOS SDK found at $HOME/esp8266-rtos-sdk"
              if git -C "$HOME/esp8266-rtos-sdk" rev-parse --is-inside-work-tree >/dev/null 2>&1; then
                echo "Fetching tags to ensure git describe works"
                git -C "$HOME/esp8266-rtos-sdk" fetch --tags --prune || true
              else
                echo "Cached SDK missing git metadata; recloning"
                rm -rf "$HOME/esp8266-rtos-sdk"
                git clone --recursive https://github.com/espressif/ESP8266_RTOS_SDK.git "$HOME/esp8266-rtos-sdk" --branch "${{ inputs.sdk-ref }}" --depth 1 || \
                  git clone --recursive https://github.com/espressif/ESP8266_RTOS_SDK.git "$HOME/esp8266-rtos-sdk" --depth 1
              fi
            else
              echo "Cloning ESP8266 RTOS SDK (ref: '${{ inputs.sdk-ref }}')"
              git clone --recursive https://github.com/espressif/ESP8266_RTOS_SDK.git "$HOME/esp8266-rtos-sdk" --branch "${{ inputs.sdk-ref }}" --depth 1 || \
                git clone --recursive https://github.com/espressif/ESP8266_RTOS_SDK.git "$HOME/esp8266-rtos-sdk" --depth 1
            fi

            export IDF_PATH=$HOME/esp8266-rtos-sdk
            python3 -m pip install --upgrade pip

            # source export and run installer (installer is safe to re-run)
            if ! . "$IDF_PATH/export.sh"; then
              echo "Error: Failed to source ESP8266 RTOS SDK export script"
              exit 1
            fi
            if ! "$IDF_PATH/install.sh"; then
              echo "Error: ESP8266 RTOS SDK installation failed"
              exit 1
            fi

        - name: Build firmware
          shell: bash
          run: |
            export IDF_PATH=$HOME/esp8266-rtos-sdk
            cd "$GITHUB_WORKSPACE"
            . "$IDF_PATH/export.sh"
            if [ -n "${{ inputs.make-target }}" ]; then
              make ${{ inputs.make-target }}
            else
              make
            fi
